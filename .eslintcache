[{"C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\index.js":"1","C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\App.js":"2","C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\reportWebVitals.js":"3","C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\main\\Calculator.jsx":"4","C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\components\\Button.jsx":"5","C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\components\\Display.jsx":"6"},{"size":570,"mtime":1609092902877,"results":"7","hashOfConfig":"8"},{"size":528,"mtime":1606755005037,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1606755005037,"results":"10","hashOfConfig":"8"},{"size":3462,"mtime":1609216090950,"results":"11","hashOfConfig":"8"},{"size":646,"mtime":1609120931010,"results":"12","hashOfConfig":"8"},{"size":122,"mtime":1609112894825,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"11joz9b",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},"C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\index.js",["31"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport Calculadora from './main/Calculator'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n<div>\n  <h1>Calculadora</h1>\n   <Calculator />\n </div>    \n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["32","33"],"C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\App.js",[],"C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\reportWebVitals.js",[],"C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\main\\Calculator.jsx",["34"],"import React, {Component} from 'react'\r\nimport './Calculator.css'\r\n\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display'\r\n\r\n\r\nconst initialState = {\r\n    DisplayValue: '0',\r\n    clearDisplay: false,\r\n    operation:null,\r\n    values:[0,0],\r\n    current:0\r\n}\r\n\r\n export default class Calculator extends Component {\r\n\r\n    state = {...initialState}\r\n\r\n    ClearMemory(){\r\n        this.setState({...initialState})\r\n    }\r\n\r\n    setOperation(operation){\r\n        // console.log(operation)\r\n        if(this.state.current === 0){\r\n            this.setState({operation,current:1,clearDisplay:true})\r\n        }else{\r\n             const equals = operation === '='\r\n             const currentOperation = this.state.operation\r\n             \r\n             const values = [...this.state.values]\r\n               try{\r\n                 values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\r\n                \r\n                 }catch(e){\r\n                     values[0] = this.state.values[0]\r\n                 }\r\n             values[1] = 0\r\n\r\n             this.setState({\r\n                 DisplayValue: values[0],\r\n                 operation: equals ? null : operation,\r\n                 current: equals ? 0 : 1,\r\n                 clearDisplay: !equals,\r\n                 values\r\n             })\r\n        }\r\n    }\r\n\r\n    AddDigit(n){\r\n        if(n === '.' && this.state.DisplayValue.includes('.')){\r\n            return \r\n        }\r\n        const clearDisplay = this.state.DisplayValue === '0'\r\n         || this.state.clearDisplay \r\n         const currentValue =  clearDisplay ? '' : this.state.DisplayValue\r\n         const DisplayValue = currentValue + n\r\n         this.setState({DisplayValue,clearDisplay:false})\r\n\r\n         if( n !== '.'){\r\n            const i = this.state.current\r\n            const newValue = parseFloat(DisplayValue)\r\n            const values = [...this.state.values]\r\n            values[i]= newValue\r\n            this.setState({values})\r\n            console.log(values)\r\n         }\r\n    }\r\n\r\n    render(){\r\n        // esse this representa o obj atual dentro do render.\r\n        const AddDigit = n => this.AddDigit(n)\r\n        const setOperation = op => this.setOperation(op)\r\n        return (\r\n            <div className=\"calculator\">\r\n                <Display value ={this.state.DisplayValue}/>\r\n                <Button label=\"AC\" click= {() => this.ClearMemory()} triple/>\r\n                <Button label=\"/\" click ={setOperation} operation/>\r\n                <Button label=\"7\" click = {AddDigit} />\r\n                <Button label=\"8\" click ={AddDigit}/>\r\n                <Button label=\"9\" click ={AddDigit}/>\r\n                <Button label=\"*\" click ={setOperation} operation/>\r\n                <Button label=\"4\" click ={AddDigit}/>\r\n                <Button label=\"5\" click ={AddDigit}/>\r\n                <Button label=\"6\"click ={AddDigit}/>\r\n                <Button label=\"-\" click ={setOperation} operation/>\r\n                <Button label=\"1\"click ={AddDigit}/>\r\n                <Button label=\"2\"click ={AddDigit}/>\r\n                <Button label=\"3\"click ={AddDigit}/>\r\n                <Button label=\"+\"click ={setOperation} operation/>\r\n                <Button label=\"0\"click ={AddDigit} double/>\r\n                <Button label=\".\"click ={AddDigit}/>\r\n                <Button label=\"=\"click ={setOperation} operation/>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n","C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\components\\Button.jsx",["35"],"import React from 'react'\r\nimport './Button.css'\r\n\r\nexport default props =>{\r\n\r\n    let classes = 'button '\r\n    classes +=  props.operation ? 'operation' : ''\r\n    classes +=  props.double ? 'double' : ''\r\n    classes +=  props.triple ? 'triple' : ''\r\n    return (\r\n        // OBS DENTRO DE UMA TEMPLATE STRING USA-SE O DOLAR E CHAVES PARA INTERPOLAR UMA VARIÁVEL.\r\n        // a primeira classe vai ser aplicada sempre independente de qualquer regra,mas as outras não. \r\n        <button \r\n        onClick ={e => props.click  && props.click(props.label)}\r\n        className={classes}>\r\n            {props.label}\r\n        </button>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Brigithy\\desktop\\exercicios-web\\react\\calculadora\\src\\components\\Display.jsx",["36"],"import React from 'react'\r\nimport './Display.css'\r\n\r\nexport default props =>\r\n<div className=\"display\">{props.value}</div>",{"ruleId":"37","severity":1,"message":"38","line":5,"column":8,"nodeType":"39","messageId":"40","endLine":5,"endColumn":19},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":34,"column":30,"nodeType":"47","messageId":"48","endLine":34,"endColumn":34},{"ruleId":"49","severity":1,"message":"50","line":4,"column":1,"nodeType":"51","endLine":20,"endColumn":2},{"ruleId":"49","severity":1,"message":"50","line":4,"column":1,"nodeType":"51","endLine":5,"endColumn":45},"no-unused-vars","'Calculadora' is defined but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-eval","eval can be harmful.","CallExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]